AWSTemplateFormatVersion: "2010-09-09"

Resources:
  # ########################################################################
  # Security
  # ########################################################################

  # IAM Role for CodeBuild and CodePipeline
  GoldenAMIBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GoldenAMIBuildRole
      Description: Rol de construcción para la AMI base
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service: 
                - codebuild.amazonaws.com
                - codepipeline.amazonaws.com
      Policies:
        - PolicyName: S3GoldenImageBucketPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:Get*'
                - 's3:List*'
                - 's3:Put*'
                Effect: Allow
                Resource: "arn:aws:s3:::golden-ami-s3-bucket/*"
        - PolicyName: PackerEC2Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'ec2:AttachVolume'
                - 'ec2:AuthorizeSecurityGroupIngress'
                - 'ec2:CreateImage'
                - 'ec2:CopyImage'
                - 'ec2:CreateKeypair'
                - 'ec2:CreateSecurityGroup'
                - 'ec2:CreateSnapshot'
                - 'ec2:CreateTags'
                - 'ec2:CreateVolume'
                - 'ec2:DeleteKeyPair'
                - 'ec2:DeleteSecurityGroup'
                - 'ec2:DeleteSnapshot'
                - 'ec2:DeleteVolume'
                - 'ec2:DeregisterImage'
                - 'ec2:DescribeImageAttribute'
                - 'ec2:DescribeImages'
                - 'ec2:DescribeInstances'
                - 'ec2:DescribeInstanceStatus'
                - 'ec2:DescribeRegions'
                - 'ec2:DescribeSecurityGroups'
                - 'ec2:DescribeSnapshots'
                - 'ec2:DescribeSubnets'
                - 'ec2:DescribeTags'
                - 'ec2:DescribeVolumes'
                - 'ec2:DetachVolume'
                - 'ec2:GetPasswordData'
                - 'ec2:ModifyImageAttribute'
                - 'ec2:ModifyInstanceAttribute'
                - 'ec2:ModifySnapshotAttribute'
                - 'ec2:RegisterImage'
                - 'ec2:RunInstances'
                - 'ec2:StopInstances'
                - 'ec2:TerminateInstances'
                Effect: Allow
                Resource: '*'
        - PolicyName: TemplateEC2InstancePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'logs:*'
                - 'ec2:CreateNetworkInterface'
                - 'ec2:DescribeNetworkInterfaces'
                - 'ec2:DeleteNetworkInterface'
                - 'ec2:DescribeSubnets'
                - 'ec2:DescribeSecurityGroups'
                - 'ec2:DescribeDhcpOptions'
                - 'ec2:DescribeVpcs'
                - 'ec2:CreateNetworkInterfacePermission'
                Effect: Allow
                Resource: '*'
        - PolicyName: GoldenAMIRepoReadAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'codecommit:BatchGet*'
                - 'codecommit:BatchDescribe*'
                - 'codecommit:Get*'
                - 'codecommit:Describe*'
                - 'codecommit:List*'
                - 'codecommit:GitPull'
                - 'codecommit:Upload*'
                Effect: Allow
                Resource: 'arn:aws:codecommit:*:*:GoldenAMIRepo*'
        - PolicyName: GoldenAMIBuildProject
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'codebuild:*'
                Effect: Allow
                Resource: 'arn:aws:codebuild:*:*:project/GoldenAMIBuild*'                
      Tags:
        - Key: motif
          Value: cf-golden-ami-demo

  #
  # Repositorio donde estarán los templates para generar la AMI
  #
  GoldenAMIRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: GoldenAMIRepo
      RepositoryDescription: Repositorio para generar template de AMI
      Tags:
        - Key: motif
          Value: ptb-cf-golden-ami-demo
  
  #
  # Bucket S3 para artefactos de CodePipeline
  # 
  GoldenAMIS3PipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: golden-ami-s3-bucket
    DeletionPolicy: Delete

  #
  # Proyecto que hace la labor de construir la AMI
  #
  GoldenAMIBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole:
        Fn::GetAtt: [ GoldenAMIBuildRole, Arn ]
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:1.0
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Cache:
        Type: S3
        Location: 
          Ref: GoldenAMIS3PipelineBucket

  #
  # Pipeline que se encarga de la coordinación de la construcción 
  # de la AMI
  #
  GoldenAMIPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: GoldeAMIPipelineDemo
      RoleArn:
        Fn::GetAtt: [ GoldenAMIBuildRole, Arn ]
      Stages:
        - Name: GoldenAMISource
          Actions:
            - Name: GoldenAMICheckout
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: GoldenAMIRepo
                BranchName: master
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: GoldenAMISource
        - Name: GoldenAMIBuild
          Actions:
            - Name: GoldenAMIBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: 
                  Ref: GoldenAMIBuild
                PrimarySource: GoldenAMISource
              InputArtifacts:
                - Name: GoldenAMISource
      ArtifactStore:
        Type: S3
        Location:
          Ref: GoldenAMIS3PipelineBucket
      Tags:
        - Key: motif
          Value: cf-golden-ami-demo

  #
  # VPC para la construcción del Golden AMI
  #
  GoldenAMIVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: false
      EnableDnsHostnames: false
      Tags:
        - Key: motif
          Value: golden-ami-vpc

  #
  # Subnet para la creación de la Golden AMI
  #
  GoldenAMISubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: GoldenAMIVPC
      CidrBlock: 10.0.0.0/24
      Tags:
        - Key: motif
          Value: golden-ami-subnet